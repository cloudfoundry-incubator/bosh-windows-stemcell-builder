[
  {
    "type": "file",
    "source": "build/bosh-psmodules.zip",
    "destination": "C:\\provision\\bosh-psmodules.zip",
    "pause_before": "60s"
  },
  {
    "type": "file",
    "source": "scripts/install-bosh-psmodules.ps1",
    "destination": "C:\\provision\\install-bosh-psmodules.ps1",
    "pause_before": "60s"
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "C:\\provision\\install-bosh-psmodules.ps1"
    ],
    "pause_before": "60s"
  },
  <% if proxy_settings != '' %>
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Set-ProxySettings <%= proxy_settings %>"
    ]
  },
  <% end %>
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Add-Account -User Provisioner -Password <%= password %>"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Upgrade-PSVersion"
    ],
    "elevated_user": "Provisioner",
    "elevated_password": "<%= password %>",
    "pause_before": "30s"
  },
  {
    "type": "windows-restart"
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "New-Provisioner"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Install-CFFeatures"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Register-WindowsUpdatesTask"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Wait-WindowsUpdates -Password <%= password %> -User Provisioner"
    ]
  },
  {
    "type": "windows-restart",
    "restart_timeout": "12h"
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Unregister-WindowsUpdatesTask"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Remove-Account -User Provisioner"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Test-InstalledUpdates"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Protect-CFCell"
    ]
  },
  {
    "type": "file",
    "source": "../sshd/OpenSSH-Win64.zip",
    "destination": "C:\\provision\\OpenSSH-Win64.zip"
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Install-SSHD -SSHZipFile 'C:\\provision\\OpenSSH-Win64.zip'"
    ]
  },
  {
    "type": "file",
    "source": "../windows-stemcell-dependencies/lgpo/LGPO.exe",
    "destination": "C:\\windows\\LGPO.exe"
  },
  {
    "type": "file",
    "source": "build/agent.zip",
    "destination": "C:\\provision\\agent.zip"
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Install-Agent -IaaS <%= iaas %> -agentZipPath 'C:\\provision\\agent.zip'"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Enable-CVE-2015-6161"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Enable-CVE-2017-8529"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Enable-CredSSP"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Disable-RC4"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Disable-TLS1"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Disable-TLS11"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Enable-TLS12"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Disable-3DES"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Disable-DCOM"
    ]
  },
<% if proxy_settings != '' %>
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Clear-ProxySettings"
    ]
  },
<% end %>
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Clear-Provisioner"
    ]
  },
  <% if iaas == "vsphere" %>
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Optimize-Disk"
    ]
  },
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Compress-Disk"
    ]
  }
  <% else %>
  {
    "type": "powershell",
    "inline": [
      "$ErrorActionPreference = \"Stop\";",
      "trap { $host.SetShouldExit(1) }",
      "Invoke-Sysprep -IaaS <%= iaas %>"
    ]
  }
  <% end %>
]
